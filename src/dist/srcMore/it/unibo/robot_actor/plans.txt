plan(1,init, sentence(true,move(actorOp(connectToSend)),'','' ))
plan(2,init, sentence(true,move(actorOp(createPi4jLed( 23))),'','' ))
plan(3,init, sentence(true,move(print("-------------")),'','' ))
plan(4,init, sentence(true,move(print("ioRobot: A robot performs a move in reactive way (usercmd)")),'','' ))
plan(5,init, sentence(true,move(print("The moves can be stopped by pressing a button on the http GUI")),'','' ))
plan(6,init, sentence(true,move(print("-------------")),'','' ))
plan(7,init, sentence(true,move( switchplan(startWalking) ),'','' ))
plan(8,init, sentence(true,move(print("---- FINE ----")),'','' ))
plan(1,startWalking, sentence(true,move(print("startWalking")),'','' ))
plan(2,startWalking, sentence( tforward( T),move(robotForward(100,0,Integer.parseInt(T))),'','' ))
plan(3,startWalking, sentence(true,move( switchplan(sendPhoto) ),'','' ))
plan(1,sendPhoto, sentence(true,move(print("sendPhoto")),'','' ))
plan(2,sendPhoto, sentence(true,move(actorOp(sendMsgMqtt)),'','' ))
plan(3,sendPhoto, sentence(true,move(resumeplan),'','' ))
plan(1,startWalking2, sentence(true,move(print("startWalking2")),'','' ))
plan(2,startWalking2, sentence( tforward( T),move(robotForward(100,0,Integer.parseInt(T))),'obstacle','stopWalking' ))
plan(3,startWalking2, sentence(true,move( switchplan(stopWalking) ),'','' ))
plan(1,stopWalking, sentence(true,move(print("stopWalking")),'','' ))
plan(2,stopWalking, sentence(true,move(robotStop(1,0,1)),'','' ))
plan(3,stopWalking, sentence(true,move(print("ioRobot stopped")),'','' ))
plan(4,stopWalking, sentence(true,move( switchplan(waitRepositioning) ),'','' ))
plan(1,reachedSensor, sentence(true,move(print("reachedSensor")),'','' ))
plan(2,reachedSensor, sentence(true,move(robotStop(10,0,0)),'','' ))
plan(3,reachedSensor, sentence( tturnleft( T),move(robotLeft(100,0,Integer.parseInt(T))),'','' ))
plan(4,reachedSensor, sentence(true,move(actorOp(startBlink)),'','' ))
plan(5,reachedSensor, sentence(true,delay( 2000) ,'','' ))
plan(6,reachedSensor, sentence( tturnright( T),move(robotRight(100,0,Integer.parseInt(T))),'','' ))
plan(7,reachedSensor, sentence(true,delay( 5000) ,'','' ))
plan(8,reachedSensor, sentence(true,move(actorOp(stopBlink)),'','' ))
plan(9,reachedSensor, sentence(true,delay( 2000) ,'','' ))
plan(10,reachedSensor, sentence(true,move(resumeplan),'','' ))
plan(1,waitRepositioning, sentence(true,move(print("waitRepositioning")),'','' ))
plan(2,waitRepositioning, sentence(true,senseEvent(86400000,"cmd","continue"),'','' ))
plan(3,waitRepositioning, sentence(true,move(print("Ho catturato l'evento start")),'','' ))
plan(4,waitRepositioning, sentence(true,eventswitch(cmd, Â»cmd( start), move( switchplan(startWalking) ) ),'','' ))
plan(5,waitRepositioning, sentence(true,repeatplan(0) ,'','' ))
plan(1,reactToUsercmd, sentence(true,move(print("reactToUsercmd in robot_actor")),'','' ))
plan(2,reactToUsercmd, sentence(true,move(resumeplan),'','' ))
plan(1,reactToEvent, sentence(true,move(print("reactToEvent in robot_actor")),'','' ))
plan(2,reactToEvent, sentence(true,printCurrentEvent(false),'','' ))
plan(3,reactToEvent, sentence(-  stored( Ev,line( X,POS)) ,move(print("stored( Ev,line(X,POS)")),'','' ))
plan(4,reactToEvent, sentence(-  stored( Ev,distance( X,POS,SIDE)) ,move(print("stored( Ev,distance(X,POS,SIDE)")),'','' ))
plan(1,doWork, sentence( tforward( X),move(print("stored( Ev,distance(X,POS,SIDE)")),'','' ))
plan(2,doWork, sentence(true,move(print("doWork END ")),'','' ))
