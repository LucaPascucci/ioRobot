/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.photoreceiver;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.util.Base64;

import javax.imageio.ImageIO;

import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;
import it.unibo.qactors.mqtt.MqttUtils;

public class Photoreceiver extends AbstractPhotoreceiver {
	//private MqttClient client;
	private MqttUtils mqtt = MqttUtils.getMqttSupport(this);
	
	public Photoreceiver(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
	
	public void connectAndSubscribe() throws Exception {
		println(this.getName() + " connectAndSubscribe "   );
		String clientid = "photoreceiver";
		String brokerAddr = "tcp://broker.hivemq.com:1883";
		String topic = "unibo/mqtt/robotbagnoli";
//		this.client = new MqttClient(brokerAddr, MqttClient.generateClientId());
//		this.client.setCallback( new SimpleMqttCallBack(this) );
//		this.client.connect();
//		this.client.subscribe(topic);
		this.mqtt.connect(this, clientid, brokerAddr, topic);
		this.mqtt.subscribe(this, clientid, brokerAddr, topic);
	}
	
	public void saveMqttPhoto(String photo) {
		println("CIAOOOOOOOOOOOOOOO: " + photo);
//		ByteArrayInputStream bis = new ByteArrayInputStream(Base64.getDecoder().decode(photo));
//		BufferedImage image = ImageIO.read(bis);
//		bis.close();
//		// write the image to a file
//		File outputfile = new File("C:\\Users\\Alessandro\\Desktop\\testphoto.jpg");
//		ImageIO.write(image, "jpg", outputfile);
	}
	
//	private class SimpleMqttCallBack implements MqttCallback  {
//		
//		private String msgID       = null;
//		private String msgType     = null;
//		private String msgSender   = null;
//		private String dest        = null;
//		private String msgcontent  = null;
//		private QActor actor;
//		
//		public SimpleMqttCallBack(QActor actor) {
//			this.actor = actor;
//		}
//		
//		@Override
//		public void connectionLost(Throwable cause) {
//			System.out.println("Connection to MQTT broker lost!");
//		}
//
//		@Override
//		public void messageArrived(String topic, MqttMessage msg)   {
//			try {
//	  			println("	%%% MqttUtils messageArrived on "+ topic + ": "+msg.toString());
//				Struct msgt      = (Struct) Term.createTerm(msg.toString());
//		//		println("messageArrived msgt "+ msgt + " actor=" + actor.getName() ); 
//				 msgID      = msgt.getArg(0).toString();
//				 msgType    = msgt.getArg(1).toString();
//				 msgSender  = msgt.getArg(2).toString();
//				 dest       = msgt.getArg(3).toString();
//				 msgcontent = msgt.getArg(4).toString();
//	 	  		 if( super.getClass() != null ) //send a msg to itself (named without _ctrl)
//					actor.sendMsg( msgSender, msgID,  actor.getName().replace("_ctrl", ""),  msgType,  msgcontent);
//			} catch (Exception e) {
////				println("messageArrived ERROR "+e.getMessage() );
//			}
//		}	
//
//		@Override
//		public void deliveryComplete(IMqttDeliveryToken token) {
//			
//		}
//	}
	
	
}
