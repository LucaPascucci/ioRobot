/* Generated by AN DISI Unibo */
package it.unibo.robot_actor;

import java.awt.image.BufferedImage;
import java.io.IOException;

import com.hopding.jrpicam.RPiCamera;
import com.hopding.jrpicam.enums.Exposure;
import com.hopding.jrpicam.exceptions.FailedToRunRaspistillException;

import it.unibo.bls.highLevel.interfaces.IDevLed.LedColor;
import it.unibo.bls.raspberry.components.DeviceLedPi4j;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;

public class Robot_actor extends AbstractRobot_actor {
	protected DeviceLedPi4j ledpi4j;
	private BlinkAsynch blink;
	protected RPiCamera piCamera;

	public Robot_actor(String actorId, QActorContext myCtx, IOutputEnvView outEnvView) throws Exception {
		super(actorId, myCtx, outEnvView, it.unibo.qactors.QActorUtils.robotBase);
	}

	public void createPi4jLed(int pinNum) {
		try {
			println("Led createPi4jLed STARTS " + pinNum);
			this.ledpi4j = new DeviceLedPi4j("led0", outEnvView, LedColor.RED, pinNum);
			this.blink = new BlinkAsynch("blinker", outEnvView, ledpi4j);

		} catch (Exception e) {
			println("ERROR " + e.getMessage());
		}
	}

	public void startBlink() {
		this.blink.activate();
	}

	public void stopBlink() {
		this.blink.suspendWork();
	}

	public void createPiCamera() {
		try {
			println("createPiCamera START");
			this.piCamera = new RPiCamera("");
			this.piCamera.setWidth(500).setHeight(500) // Set Camera width and height
					.setExposure(Exposure.AUTO) // Set Camera's exposure.
					.setTimeout(2) // Set Camera's timeout.
					.setAddRawBayer(true) // Add Raw Bayer data to image files
					.setHorizontalFlipOn().setRotation(180);

			println("createPiCamera END");

		} catch (FailedToRunRaspistillException e) {
			println("ERROR " + e.getMessage());
		}
	}

	private BufferedImage takePhoto() {
		BufferedImage image = null;
		try {
			println("ACQUISIZIONE FOTO IN CORSO...");
			image = this.piCamera.takeBufferedStill(); // non salva la foto in locale (piï¿½ veloce)
			println("FOTO ACQUISITA");
			
			//TODO serve per salvare la foto in locale
			//File outputfile = new File("/home/pi/Desktop/testphoto.jpg");
			//ImageIO.write(image, "jpg", outputfile);

		} catch (IOException | InterruptedException e) {
			println("ERROR " + e.getMessage());
		}
		return image;
	}
}
